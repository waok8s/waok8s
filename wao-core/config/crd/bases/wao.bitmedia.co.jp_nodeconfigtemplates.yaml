---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: nodeconfigtemplates.wao.bitmedia.co.jp
spec:
  group: wao.bitmedia.co.jp
  names:
    kind: NodeConfigTemplate
    listKind: NodeConfigTemplateList
    plural: nodeconfigtemplates
    singular: nodeconfigtemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NodeConfigTemplate is the Schema for the nodeconfigtemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeConfigTemplateSpec defines the desired state of NodeConfigTemplate
            properties:
              metricsCollector:
                properties:
                  deltaP:
                    properties:
                      basicAuthSecret:
                        description: BasicAuthSecret specifies the name of the Secret
                          in the same namespace used for basic auth. Some Types require
                          this value.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      endpoint:
                        description: Endpoint specifies the endpoint URL. Behavior
                          depends on the client specified by Type.
                        type: string
                      fetchInterval:
                        description: FetchInterval specifies the data retrieval interval.
                          Some Types require this value, and behavior depends on the
                          client.
                        type: string
                      type:
                        description: Type specifies the type of endpoint. This value
                          means which client is used.
                        type: string
                    required:
                    - endpoint
                    - type
                    type: object
                  inletTemp:
                    properties:
                      basicAuthSecret:
                        description: BasicAuthSecret specifies the name of the Secret
                          in the same namespace used for basic auth. Some Types require
                          this value.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      endpoint:
                        description: Endpoint specifies the endpoint URL. Behavior
                          depends on the client specified by Type.
                        type: string
                      fetchInterval:
                        description: FetchInterval specifies the data retrieval interval.
                          Some Types require this value, and behavior depends on the
                          client.
                        type: string
                      type:
                        description: Type specifies the type of endpoint. This value
                          means which client is used.
                        type: string
                    required:
                    - endpoint
                    - type
                    type: object
                required:
                - deltaP
                - inletTemp
                type: object
              nodeSelector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              predictor:
                properties:
                  powerConsumption:
                    properties:
                      basicAuthSecret:
                        description: BasicAuthSecret specifies the name of the Secret
                          in the same namespace used for basic auth. Some Types require
                          this value.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      endpoint:
                        description: Endpoint specifies the endpoint URL. Behavior
                          depends on the client specified by Type.
                        type: string
                      fetchInterval:
                        description: FetchInterval specifies the data retrieval interval.
                          Some Types require this value, and behavior depends on the
                          client.
                        type: string
                      type:
                        description: Type specifies the type of endpoint. This value
                          means which client is used.
                        type: string
                    required:
                    - endpoint
                    - type
                    type: object
                  powerConsumptionEndpointProvider:
                    properties:
                      basicAuthSecret:
                        description: BasicAuthSecret specifies the name of the Secret
                          in the same namespace used for basic auth. Some Types require
                          this value.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      endpoint:
                        description: Endpoint specifies the endpoint URL. Behavior
                          depends on the client specified by Type.
                        type: string
                      fetchInterval:
                        description: FetchInterval specifies the data retrieval interval.
                          Some Types require this value, and behavior depends on the
                          client.
                        type: string
                      type:
                        description: Type specifies the type of endpoint. This value
                          means which client is used.
                        type: string
                    required:
                    - endpoint
                    - type
                    type: object
                type: object
            required:
            - metricsCollector
            - nodeSelector
            - predictor
            type: object
          status:
            description: NodeConfigTemplateStatus defines the observed state of NodeConfigTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
